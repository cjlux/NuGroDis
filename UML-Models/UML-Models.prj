format 209
"NuGroDis"
  revision 46
  modified_by 7 "jlc"


  
  // class settings
  default_attribute_visibility private default_relation_visibility private default_operation_visibility public
  
  classdiagramsettings draw_all_relations yes hide_attributes no hide_operations no hide_getset_operations no show_members_full_definition no show_members_visibility yes show_members_stereotype no show_members_context no show_members_multiplicity no show_members_initialization no show_attribute_modifiers no member_max_width 127 show_parameter_dir yes show_parameter_name yes package_name_in_tab no class_drawing_mode natural drawing_language uml show_context_mode no auto_label_position yes show_relation_modifiers no show_relation_visibility no show_infonote no shadow yes gradient none show_stereotype_properties no end
  
  usecasediagramsettings package_name_in_tab no show_context_mode no auto_label_position yes draw_all_relations yes class_drawing_mode actor shadow yes gradient none show_stereotype_properties no end
  
  sequencediagramsettings show_full_operations_definition no show_class_of_operation no write_horizontally yes instances_drawing_mode natural drawing_language uml draw_all_relations yes shadow yes gradient none show_stereotype_properties no show_class_context_mode no show_msg_context_mode no end
  
  collaborationdiagramsettings show_full_operations_definition no show_class_of_operation no show_hierarchical_rank no write_horizontally yes instances_drawing_mode natural drawing_language uml package_name_in_tab no show_class_pack_context_mode no show_msg_context_mode no draw_all_relations yes shadow yes gradient none show_stereotype_properties no end
  
  objectdiagramsettings write_horizontally yes package_name_in_tab no show_class_pack_context_mode no auto_label_position yes draw_all_relations yes shadow yes gradient none show_stereotype_properties no end
  
  componentdiagramsettings package_name_in_tab no show_context_mode no auto_label_position yes draw_all_relations yes shadow yes gradient none
   draw_component_as_icon no show_component_req_prov no show_component_rea no show_stereotype_properties no end
  
  deploymentdiagramsettings package_name_in_tab no show_context_mode no write_horizontally yes auto_label_position yes draw_all_relations yes shadow yes gradient none
   draw_component_as_icon no show_component_req_prov no show_component_rea no show_stereotype_properties no end
  
  statediagramsettings package_name_in_tab no show_context_mode no auto_label_position yes write_label_horizontally yes show_trans_definition no draw_all_relations yes shadow yes gradient none
   show_activities yes region_horizontally yes drawing_language uml show_stereotype_properties no end
  
  activitydiagramsettings package_name_in_tab no show_context_mode no show_opaque_action_definition no auto_label_position yes write_label_horizontally no draw_all_relations yes shadow yes gradient none
   show_infonote yes drawing_language uml show_stereotype_properties no end
  
  class_color yellow duration_color transparent continuation_color gray note_color blue fragment_color transparent subject_color transparent usecase_color yellow package_color transparent component_color green artifact_color green deploymentnode_color gray state_color yellow stateaction_color transparent activity_color transparent activityregion_color transparent activitypartition_color transparent activityaction_color transparent parameterpin_color white generalization_color black 
  dpi 96
  font_size 10
  diagram_format A4

  image_root_dir ""

  mark_for_import
  
  ncouples 1
  key "html dir" value "/home/users2/mgado/phd/biblio/NuGroDis/html/14_01_2015/"
  classview 134530 "Maturation"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    classdiagram 141314 "maturation"
      classdiagramsettings member_max_width 0 end
      size A4
    end
  end

  classview 128002 "NuGroDis"
    
    classdiagramsettings member_max_width 0 auto_label_position no end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    classdiagram 134786 "All"
      classdiagramsettings draw_all_relations no hide_attributes yes hide_operations yes member_max_width 0 end
      size A4
    end

    classdiagram 128002 "AroundTheGrain"
      classdiagramsettings draw_all_relations no hide_operations yes member_max_width 0 end
      size A4
    end

    classdiagram 128066 "ChemicalComposition"
      classdiagramsettings draw_all_relations yes hide_operations no member_max_width 0 end
      size A4-Landscape
    end

    classdiagram 128130 "Constants"
      classdiagramsettings member_max_width 0 end
      size A4
    end

    classdiagram 141570 "vacancy Computation"
      classdiagramsettings show_members_full_definition yes member_max_width 0 end
      size A4
    end

    classdiagram 141304 "Relations"
      classdiagramsettings hide_attributes yes hide_operations yes member_max_width 0 end
      size A4
    end

    class 128642 "Boundary"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The 2 boundaries objects are:
- Grain-Grain boundary;
- Grain-Precipitate boundary;
- Precipitate-Precipitate boundary.
Each of this 2 grain-boundaries has its own surface enregy."
      attribute 142978 "volNbGP"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Volumic number of GP precipitates inside the grain boundary
Unit: Number/m^3"
      end

      attribute 143106 "volNbSprime"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Volumic number of Sprime precipitates inside the grain boundary
Unit: Number/m^3"
      end

      attribute 128194 "volNbPrecipitates"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Volumic number of precipitates inside the grain boundary
Unit: Number/m^3"
      end

      classrelation 137602 // <aggregation>
	relation 136194 o---
	  a role_name "" multiplicity "2..*" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type} *> ${name}${value};
"
	    classrelation_ref 137602 // <aggregation>
	  b role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 137730 // <aggregation>
      end
    end

    class 129026 "ChemicalComposition"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Chemical composition is made of one or more chemical elements which one having a concentration value.
The sum of all the concentration values for all the chemical elements must equal 1."
      operation 170744 "UpdateVolumicValues"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Update volumic values for all chemical elements.
** Le commentaire qui suit  est incertain et est à modifier : update au sens où  on met à jour   les volumic values après que l'utilisateur est définit  en paramètre d'entrées des concentrations qui peuvent être de n'importe quel type (mùassic, atomic,...)  **"
      end

      classrelation 129794 // <aggregation>
	relation_ref 128898 // <aggregation>
      end

      classrelation 129410 // <aggregation>
	relation 128770 o---
	  a role_name "" multiplicity "1..*" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 129410 // <aggregation>
	  b role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 129538 // <aggregation>
	  association_type class_ref 128514 // Concentration
      end

      classrelation 130050 // <aggregation>
	relation_ref 129026 // <aggregation>
      end
    end

    class 128386 "ChemicalElement"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 128258 "density"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The density of the chemical element 
Unit: kg.m^-3"
      end

      attribute 143234 "equilibriumConcentration"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Equilibrium concentration between the solid solution and a planar precipitate.(volumic %)
Depends on temperature.
Symbol : X_eq_Cu_SS, X_eq_Mg_SS...
Unit : volumic percentage"
      end

      attribute 143362 "interFacialConcentration"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "concentration between the solid solution and a precipitate of mean diameter d.(volumic %)  computed by ComputeInterFacialConcentration.
Depends on temperature.
Symbol : X_i_Cu_SS, X_i_Mg_SS...
Unit : volumic percentage"
      end

      attribute 128386 "molarMass"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The molar mass of the chemical element 
Unit: g.mol^-1"
      end

      attribute 136066 "poissonCoefficient"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The Poisson coefficient of the chemical element
Unit: no unit"
      end

      attribute 128514 "youngModulus"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The Young Modulus of the chemical element.
Unit: MPa"
      end

      operation 197752 "ChemicalElement"
	public explicit_return_type ""
	nparams 4
	  param in name "density" explicit_type "double"
	  param in name "molarMass" explicit_type "double"
	  param in name "poissonCoef" explicit_type "double"
	  param in name "youngModulus" explicit_type "double"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${volatile}${throw} {
  ${body}}
"
	
	
	
	
	comment "the constructor, take as optional argument the density,the molarMass, the poissonCoefficient and the young Modulus of the element."
      end

      operation 191224 "ComputeInterFacialConcentration"
	public explicit_return_type ""
	nparams 2
	  param in name "diameter" explicit_type "double"
	  param in name "temp" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Computes the concentration between the solid solution and a precipitate of mean diameter d.(volumic %)
Depends on temperature.
Symbol : X_i_Cu_SS, X_i_Mg_SS...
Unit : volumic percentage"
      end

      operation 170360 "ConvertMassicToVolumicConcentration"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Convert massic into volumic concentration"
      end

      operation 171256 "ConvertVolumicToMassicConcentration"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Convert volumic into massic concentration"
      end

      operation 142968 "ConvertAtomicToVolumicConcentration"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Convert atomic to volumic concentration"
      end

      operation 171128 "ConvertVolumicToAtomicConcentration"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Convert volumic to atomic concentration"
      end

      operation 143096 "ConvertStoechiometricCoefficient2VolumicConcentration"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Convert stoechiometric coefficients  to volumique concentrations (must live in [0,1]) 
Only for precipitates"
      end

      operation 134530 "GetMolarMass"
	public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Returns the molar mass in SI unit 
Unit: kg/mol"
      end

      classrelation 129154 // <association>
	relation 128642 ----
	  a role_name "" multiplicity "0..1" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 129154 // <association>
	  b role_name "" multiplicity "0..1" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 129282 // <association>
	  association_type class_ref 128898 // Diffusion
      end

      classrelation 129282 // <association>
	relation_ref 128642 // <association>
      end

      classrelation 129538 // <aggregation>
	relation_ref 128770 // <aggregation>
      end

      classrelation 144642 // <aggregation>
	relation_ref 142850 // <aggregation>
      end
    end

    class 128514 "Concentration"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Concentration for Grains can vary with time:
- the initial concentrations of each chemical elements are stored;
- the concentration of any chemical element at current time t is stored.

Concentration for Precipitates are constant versus time (only the initial concentrations of each chemical elements are stored).

Concentration is volumique and is a ratio [0,1] not a percentage (They can be converted after by other methods)

Values can also be calculated from stoehiometric coefficients( in the case of precipitates)"
      attribute 156024 "initialAtomicValue"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The initial atomic concentration of the chemical element
Unit: ratio in the range [0,1]"
      end

      attribute 155896 "initialMassicValue"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The initial massic concentration of the chemical element
Unit: ratio in the range [0,1]"
      end

      attribute 166146 "stoechiometricCoef"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Only for precipitates"
      end

      attribute 129538 "volumicValue"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	get_oper operation_ref 141058 // GetVolumicValue
	comment "value of the current volumic concentration of the chemical element.
Unit : ratio in the range[ 0, 1]

May be computed from massic concentration....
"
      end

      operation 170232 "Concentration"
	public explicit_return_type ""
	nparams 1
	  param in name "massic" explicit_type "double"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}${)}${volatile}${throw} {
  ${body}}
"
	
	
	
	
	comment "The conctructor, taking as optional argument the initial  volumic concentration value"
      end

      operation 170872 "ComputeAtomicValue"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Compute the atomic concentration from  current volumic value.
Because current atomic concentration is not stored , iist  computed using chemicalElement::ConvertVolumicToAtomicConcentration"
      end

      operation 171000 "ComputeMassicValue"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Compute massic from the current volumic value 
Because current amassic concentration is not stored , iiit is computed using chemicalElement::ConvertVolumicToAtMassicncentration"
      end

      operation 141058 "GetVolumicValue"
	force_body_gen const cpp_inline public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}${)}${const}${volatile}${throw};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  return volumicValue;
}
"
	cpp_name_spec "get_${name}"
	final 
	java_name_spec "get${Name}"
	php_final 
	php_name_spec "get${Name}"
	
	python_name_spec "get${Name}"
	
	idl_name_spec "get_${name}"
	get_of_attribute attribute_ref 129538 // volumicValue
	comment "This method return the value of the volumic concentration"
      end

      operation 170488 "SetInitialAtomicValue"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Set Initial atomic value"
      end

      operation 170616 "SetInitialMassicValue"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Set Initial atomic value."
      end

      operation 170104 "SetVolumicValue"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Set value of volumic concentration"
      end
    end

    class 149250 "Computation"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 158722 "maxComputationTime"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The total computation duration in second [s] = Maturation.duration + ThermalLoading.duration (was tmax)
Unit: s"
      end

      operation 163448 "Computation"
	public explicit_return_type ""
	nparams 1
	  param in name "dataFile" explicit_type "string"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}${)}${volatile}${throw} {
  ${body}}
"
	
	
	
	
	comment "The constructor take as argument the name of the input data File"
      end

      operation 135416 "ComputeDuration"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Compute and save maxComputation time : Hardening.duration + ThermalLoading.duration"
      end

      operation 142072 "ProcessThermalLoadingData"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 142328 "ProcessMaturationData"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Read and process data relative to maturation"
      end

      operation 128248 "ReadDataFile"
	public explicit_return_type ""
	nparams 1
	  param in name "fileName" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Reads the data file for the simulation and make all the other objects read their data."
      end

      attribute 169080 "type"
	private explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Type of computation (see nugrodis.py)"
      end

      classrelation 134776 // <association>
	relation 134648 ----
	  a role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 134776 // <association>
	  b role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 135032 // <association>
      end

      classrelation 135160 // <association>
	relation 134776 ----
	  a role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 135160 // <association>
	  b role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 135288 // <association>
      end

      classrelation 135416 // <association>
	relation 134904 ----
	  a role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 135416 // <association>
	  b role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 135544 // <association>
      end

      classrelation 135672 // <association>
	relation 135032 ----
	  a role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 135672 // <association>
	  b role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 135800 // <association>
      end
    end

    class 128898 "Diffusion"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The diffusion of one chemical element toward another chemical element.
SI unit :  m^2/s."
      attribute 129026 "D0"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Initial diffusion value
unit: m^2/s"
      end

      attribute 129154 "Q"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Activation energy of diffusion for a pair of chemical elements 
Unit: J/mol"
      end

      operation 128002 "CoefficientValue"
	public explicit_return_type ""
	nparams 1
	  param in name "T" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Computes the diffusion coefficient for the given value of the temperature 
Unit: K"
      end
    end

    class 135554 "GuinierPreston"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Precipitate of type Guiner Preston."
      operation 190968 "ComputeNucleationSiteNb"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Compute the number of nucleation sites using RadiusDistribution::ComputeTotNbOfItems"
      end

      operation 162306 "ComputeVolumicFraction"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Compute the volumic fraction
"
      end

      operation 143352 "ReadDataValue"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 137346 // <generalisation>
	relation 135938 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 137346 // <generalisation>
	  b parent class_ref 128258 // Precipitate
      end
    end

    class 128002 "Material"
      visibility protected 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A Material has a micro-structural state defined by the grains that constitute the material.
A Material is made of many grains (\"many\" can be \"very large\"...).
A material has an initial chemical composition. (This value is constant through the computation)      
"
      attribute 129410 "T"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The temperature of the material.
Unit : K"
      end

      operation 143608 "ReadData"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 128002 // <aggregation>
	relation 128002 o---
	  a role_name "" multiplicity "*" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 128002 // <aggregation>
	  b role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 128130 // <aggregation>
      end

      classrelation 129922 // <aggregation>
	relation 129026 o---
	  a role_name "" multiplicity "1" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 129922 // <aggregation>
	  b role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 130050 // <aggregation>
      end

      classrelation 130690 // <aggregation>
	relation 129410 o---
	  a role_name "" multiplicity "*" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 130690 // <aggregation>
	  b role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 130818 // <aggregation>
      end

      classrelation 144514 // mainElement (<aggregation>)
	relation 142850 o---
	  a role_name "mainElement" multiplicity "1" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 144514 // mainElement (<aggregation>)
	  b role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 144642 // <aggregation>
      end
    end

    class 142338 "Hardening"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Hardening is either maturation or tempering."
      attribute 150402 "duration"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Maturation duration in second[s]. (was tmat)
Unit: s"
      end

      attribute 150658 "maxTimeStep"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The maximum value allowed for any computed Time step. Also can be used as initial value for time step. (was deltati)
Unit: s"
      end

      operation 147842 "GetMinTimeStep"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "The minimum value allowed for any computed Time step. This value is computed
Unit: s"
      end

      classrelation 151170 // <aggregation>
	relation 149378 o---
	  a role_name "" multiplicity "*" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type} *> ${name}${value};
"
	    classrelation_ref 151170 // <aggregation>
	  b role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 151298 // <aggregation>
      end

      classrelation 135032 // <association>
	relation_ref 134648 // <association>
      end

      operation 184312 "GetInfo"
	public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Just an example...."
      end
    end

    class 128258 "Precipitate"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A Precipitate \"Is a\" Grain.
A Precipitate cannot contain any other Grain.
A precipitate has a fixed composition (fixed stoechiometrie).
The class Precipitate will not be instanciated because the number of precipitates is too high ( ~10^9). Instead the volumic number of precipitates is computed in the class Grain thanks to the atribute volNbPrecipitates."
      attribute 134776 "deltaCell"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ratio: difference between precipitate and solid solution cell size / reference size (was deltamaille,in the range [0,1]) 
Unit: No unit. In the range [0.1]"
      end

      attribute 143618 "deltaH"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "solvus activation enthalpy. (was deltaHPn)
Unit : J/mol"
      end

      attribute 134904 "distorsionEnergy"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "elastic distorsion energy due to the difference of cell size.(was deltageP) 
unit: J/m^3"
      end

      attribute 165890 "nucleationSitesNumber"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Current nucleation sites number
The first value is initial value (was Ns0P1 or N0P2) 
Unit: atomNumber/m^3 (P1) or Precipitates-Dislocations-GrainBoundary Number/m^3  (P2)"
      end

      attribute 143490 "K0"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "pre-exponential solvus constant
Used in the temperature dependency of X_eq_SS or X_i_SS...
value depends on the precipitate....
(was KPn)
unit: m^6 / m^6 "
      end

      attribute 135288 "surfaceEnergyPolynome"
	private explicit_type "Polynomial *   [Utils]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The polynomial model to compute the surface energy.
Unit: J/m^2"
      end

      attribute 173058 "shapeFactor"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ratio between lenght to radius.If nul, shape is spherical. (was alphaP)
Unit: No unit"
      end

      attribute 173186 "volumicFraction"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "(was fracvolPn)
Unit: In the range [0,1].no unit. "
      end

      operation 128120 "ComputeDistorsionEnergy"
	public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 162178 "ComputeSurfaceEnergy"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Compute the interfacial energy
Unit: J/m^2

**Actually, surface energy is not stored *"
      end

      operation 143224 "ReadDataValue"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Read data value specific for this precipitate"
      end

      classrelation 130818 // <aggregation>
	relation_ref 129410 // <aggregation>
      end

      classrelation 137730 // <aggregation>
	relation_ref 136194 // <aggregation>
      end

      classrelation 128258 // <generalisation>
	relation 128130 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 128258 // <generalisation>
	  b parent class_ref 128130 // SSGrain
      end

      classrelation 130306 // <aggregation>
	relation_ref 129154 // <aggregation>
      end

      classrelation 142328 // <aggregation>
	relation 141560 o---
	  a role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 142328 // <aggregation>
	  b role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 142456 // <aggregation>
      end
    end

    class 141176 "Quenching"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Hardening is either maturation or tempering."
      attribute 148856 "duration"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "quenching duration, is computed from cooling rate and  final&solutionazing temperature (s). duration=(Tsol-Tfinal)/coolingRate
Unit: s"
      end

      attribute 148984 "coolingRate"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Is the cooling rate of quenching.  
Unit: K/s"
      end

      attribute 149240 "finalTemperature"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "is quenching final temperature
Unit: K"
      end

      attribute 149112 "solutionizingTemperature"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Solutionizing Temperature (was Tsol) 
Unit: K"
      end

      attribute 162552 "timeStep"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "the computed value of the time step."
      end

      attribute 149368 "totIterationNumber"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	set_oper operation_ref 150392 // SetTotIterationNumber
	comment "Total iteration number for quenching discretisation. By default, This value is not initially settv yb yuser.  The  default value used for constructor is the one which   gives a  temperature discretisation step (deltaTi) of 1°C

deltaTi=(Tinitiale-Tfinale)/totIterationNumber . if deltaTi=1°C then totIterationNumber=Tinitiale-Tfinale, this is the default value of totIterationNumber"
      end

      operation 150264 "Quenching"
	public explicit_return_type ""
	nparams 3
	  param in name "Tsol" explicit_type "double"
	  param in name "Tfinal" explicit_type "double"
	  param in name "coolRate" explicit_type "double"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${volatile}${throw} {
  ${body}}
"
	
	
	
	
	comment "The constructor.
The constructor compute timeStep from arguments:
totIterationNumber =( Tsol-Tfinal)
duration=(Tsol-Tfinal)/coolingRate
timeStep=duration/totIterationNumber
"
      end

      operation 150392 "SetTotIterationNumber"
	force_body_gen public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type ""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  totIterationNumber = ${p0};
}
"
	cpp_name_spec "set_${name}"
	
	java_name_spec "set${Name}"
	
	php_name_spec "set${Name}"
	
	python_name_spec "set${Name}"
	
	idl_name_spec "set_${name}"
	set_of_attribute attribute_ref 149368 // totIterationNumber
	comment "gives value to totIterationNumber if is greater than the computed value"
      end

      classrelation 135288 // <association>
	relation_ref 134776 // <association>
      end
    end

    class 142594 "RadiusDistribution"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Precipitates radii are discretised  and arrange  into class of  finite radius
An initial number of class, the minimum radius of the distribution, and the  statial step of discretisation, are given .
A radius distribution is used by SSGrain.
A thermal loading has a radius distribution"
      attribute 141816 "classValues"
	private explicit_type "double *"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Values of the class distribution (was NP1).Initialise to 0 at construction
Unit: Number of precipitates /m^3
"
      end

      attribute 151170 "initialClassNumber"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "number of class at the beginning of maturation or thermal loading
Unit: No unit.Number of classes"
      end

      attribute 151042 "minRadius"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the first class in the histogramme
Unit: m"
      end

      attribute 151298 "spatialStep"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Spatial discretisation step
unit: m
"
      end

      operation 190840 "ComputeTotNbOfItems"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Computes the total number of  items. Use to find nucleation site number."
      end

      operation 148354 "GetItemNumberForClass"
	public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Return the item number for class i "
      end

      operation 135160 "RadiusDistribution"
	public explicit_return_type ""
	nparams 2
	  param in name "deltar" explicit_type "double"
	  param in name "r1" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Builds an instance with given parameters deltar and r1 (all the histogram values are initialized to 0)."
      end

      operation 148098 "ReadInitialDistribution"
	public explicit_return_type ""
	nparams 1
	  param in name "dataFile" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "An object of this class will be devoted to GP and will read the initial GP Distribution needed for Thermal Loading Computing only."
      end

      operation 148482 "SetItemNumberForClass"
	public explicit_return_type ""
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "itemNumber" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Set the item number for class i. "
      end

      operation 141944 "SetAllItemNumbers"
	public explicit_return_type ""
	nparams 1
	  param in name "NP1" explicit_type "double *"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Gives values for all the item numbers. Values can be the same for all classes or a list of values"
      end

      operation 142456 "SetClassNumber"
	public explicit_return_type ""
	nparams 1
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Set the number of distibution classes"
      end

      classrelation 151298 // <aggregation>
	relation_ref 149378 // <aggregation>
      end

      classrelation 151554 // <aggregation>
	relation_ref 149506 // <aggregation>
      end

      classrelation 158210 // <association>
	relation_ref 156034 // <association>
      end

      classrelation 135800 // <association>
	relation_ref 135032 // <association>
      end

      classrelation 142456 // <aggregation>
	relation_ref 141560 // <aggregation>
      end
    end

    class 135682 "Sprime"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Precitate of type Sprime
**There will be 2 instantiations of Sprime, one in boundary and other  in SSGrain**"
      attribute 135032 "wettingAngle"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "(was thetaP2) 
Unit: degree"
      end

      attribute 135160 "Stheta"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "(was SthetaP2)"
      end

      operation 191096 "ComputeNucleationSiteNb"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Compute the number of nucleation sites using  the Guinier-Preston RadiusDistribution::ComputeTotNbOfItem "
      end

      operation 177784 "ComputeVolumicFraction"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "compute the volumic fraction of Sprime precipitates"
      end

      operation 143480 "ReadDataValue"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 128376 "WettingFunction"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "compute value of Stheta"
      end

      classrelation 137474 // <generalisation>
	relation 136066 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 137474 // <generalisation>
	  b parent class_ref 128258 // Precipitate
      end
    end

    class 128130 "SSGrain"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The class SSGrains represents a collection of many SSGrains.?????

A SSGrain is grain of Solid solution
A Grain can contain precipitates. A Precipitate cannot contain any other grains. (Grain <-> Solid solution)
A Grain:
- is made of atomes, organized following a given scheme (centered-cubic...) caracterized by an orientation and a mesh parameter (lattice parameter);
- has a mean diameter;
- has a boundary;
- has a chemical composition 
A grain has a variable composition (variable stoichiometry)."
      attribute 128002 "latticeParameter"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The lattice parameter of the main ChemicalElement 
Unit: m"
      end

      attribute 129282 "meanDiameter"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The mean diameter of the grain, or of the bounding sphere of the grain.
Unit : m"
      end

      attribute 172802 "molarVolume"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Volume of one mol of precipitate or  one mol af atoms of SSGrain
Unit : m^3/mol  :    m^3/atomMol (SSGrain) or m^3/precipitatesMol (Precipitates)
For Sprime, as commented by many authors, Al2CuMg has an orthorhombic structure with 16 atoms ==> (4*Al2CuMg) per unit cell (a=0,4nm, b=0,923 nm, and c=0,714 nm). V_moleculeAl2CuMg=V_unitCell/4 , then V_mAl2CuMg which is the volume of 1 mole of molecules Al2CuMg is expressed as follow:  VmAl2CuMg= Na*V_moleculeAl2CuMg  =  3.9686*10^(-5) m^3/moleOfMolecule_Al2CuMg, sensibly equal to 4E-5"
      end

      attribute 136194 "poissonCoeff"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The Poisson coefficient of the Grain.
If not given, can be approximated with the Poisson coefficient of the main chemical element of the grain.
Unit: no unit"
      end

      attribute 136322 "volNbGP"
	private explicit_type "int"
	constraint "volumic number of GuinierPreston precipitates (numberOfParticule/m^3.s"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "volumic number of GP precipitates. 
Unit: number/m^3"
      end

      attribute 136450 "volNbSprime"
	private explicit_type "int"
	constraint "volumic number of Sprime precipitates (numberOfParticule/m^3.s)."
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "volumic number of Sprime precipitates.
Unit: number/m^3"
      end

      attribute 128066 "volNbPrecipitates"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Volumic number of precipitates in the grain.
Unit: number/m^3"
      end

      attribute 128130 "youngModulus"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The Young modulus of the Grain 
If not given, can be approximated with the Young modulus of the main chemical element of the grain.
Unit: MPa"
      end

      operation 162050 "ComputeMolarVolume"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Compute the molar volume of (precipitates, solid solution,...).The result is written in molar volume[m^3/mol] (was VmP1,VmP2)
Unit: m^3/mol"
      end

      operation 142840 "ReadDataValue"
	cpp_virtual public explicit_return_type ""
	nparams 1
	  param in name "fileName" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Read Specific data value for the given Alloy.
Computes the atomic concentrtaions for the chemical elements in the solid Solution"
      end

      classrelation 130178 // <aggregation>
	relation 129154 o---
	  a role_name "" multiplicity "*" private
	    comment "A grain can contain 0 or many precipitates"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 130178 // <aggregation>
	  b role_name "" multiplicity "*" private
	    comment "A precipitate can be in 0(Boundary) or 1 grain"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type} *> ${name}${value};
"
	    classrelation_ref 130306 // <aggregation>
      end

      classrelation 158082 // <association>
	relation 156034 ----
	  a role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 158082 // <association>
	  b role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 158210 // <association>
      end

      classrelation 130434 // <association>
	relation 129282 ----
	  a role_name "" multiplicity "*" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 130434 // <association>
	  b role_name "" multiplicity "*" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 130562 // <association>
	  association_type class_ref 128642 // Boundary
      end

      classrelation 130562 // <association>
	relation_ref 129282 // <association>
      end

      classrelation 129666 // <aggregation>
	relation 128898 o---
	  a role_name "" multiplicity "1" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 129666 // <aggregation>
	  b role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 129794 // <aggregation>
      end

      classrelation 128130 // <aggregation>
	relation_ref 128002 // <aggregation>
      end
    end

    class 142210 "Temperature"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Class Temperature, defining the current temperature for computing, 
Can be an array of Value versus time
Unit: K"
    end

    class 142466 "ThermalLoading"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This file must read datafile giving the difference sequences of Tempenrature with associated time duration.
Unit: K"
      attribute 150530 "duration"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Thermal loading duration (was tmax - tmat)
Unit: s"
      end

      attribute 142072 "time"
	private explicit_type "double*"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Time vector of temperature loading
Unit: s"
      end

      attribute 142200 "temperature"
	private explicit_type "double*"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Temperature vector of ThermalLoading. 
Unit: K"
      end

      operation 147970 "ReadDistributionFile"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Read the File giving the radius distribution of precipitates (NP1, NP2, ...)"
      end

      operation 142200 "ReadTemperatureLoading"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Read the values for the temperature loading (equivalent to read TK1 and set time and temperature attributes)"
      end

      operation 142584 "ReadVCAH"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Read Vacancies concentration after hardening (maturation or tempering)"
      end

      classrelation 151426 // <aggregation>
	relation 149506 o---
	  a role_name "" multiplicity "*" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type} *> ${name}${value};
"
	    classrelation_ref 151426 // <aggregation>
	  b role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 151554 // <aggregation>
      end

      classrelation 135544 // <association>
	relation_ref 134904 // <association>
      end
    end

    class 128770 "ThermoDynamicsConstant"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 128642 "R"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Perfect gas constant 
Unit: J/mol.K "
      end

      attribute 128770 "kB"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Boltzman constant
Unit: J/K"
      end

      attribute 128898 "Na"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Avogadro's number
Unit: at/mol"
      end
    end

    class 142722 "Vacancy"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Atoms diffusion depends on vacancies concentration."
      attribute 151426 "creationEnthalpy"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Free Energy(Was DeltaHF in precipitumus 21.2) 
Enthalpy of vacancy formation
Unit: J/mol"
      end

      attribute 151554 "creationEntropy"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Free Energy(Was DeltaSF in precipitumus 21.2) 
Entropy of vacancy formation
Unit: J/mol/K"
      end

      attribute 165506 "concentration"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "save current concentration value.
Last Current value can be  Concentratrion  After hardening. "
      end

      attribute 142328 "concentrationBeforeQuenching"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The value of vacancies concentration before quenching (was Xlacavtrempe) 
Unit: number of vacancies/m^3"
      end

      attribute 152066 "halfSinkDistance"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Semi Distance between vacancy sinks (was l)
Unit: m"
      end

      attribute 151810 "jumpFrequency"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Frequency of vacancy's jumps (was fE in precipitumus 21.2)  
Unit: s^(-1)"
      end

      attribute 151938 "preExpDiffusionValue"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Preexponential term of vacancy diffusion expression(was Dlac0 in prec21.2)  
Unit: m^2/s
"
      end

      attribute 165378 "magnesiumInteractionEnergy"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Interaction energy between magnesium and vacancies 
Unit: J"
      end

      attribute 151682 "migrationEnthalpy"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Enthalpy of vacancy migration (Was DeltaHM in precipitumus 21.2) 
Unit: J/mol"
      end

      attribute 152194 "solutionisingTemperature"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Solutionising temperature: temperature at which the metal is heated before quenching (was Tf) 
Unit: K"
      end

      attribute 165250 "copperInteractionEnergy"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Interaction energy between copper and vacancies 
Unit: J"
      end

      operation 141186 "ComputeConcentrationBeforeQuenching"
	private explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Compute and save equilibrium concentration of vacancies after solutionizing ( was Xlacavtrempe in V21.2)
to do: check validity of the equation"
      end

      operation 141314 "GetConcentrationBeforeQuenching"
	public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "get equilibrium concentration of vacancies after solutionizing ( was Xlacavtrempe in V21.2)"
      end

      operation 155010 "SaveQuenchingFinalConcentration"
	public explicit_return_type ""
	nparams 1
	  param in name "fileName" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "save the concentration (atomic fraction or molar fraction)  of vacancies at the end of the quenching. (was at the end of quenching, was Xlacfinmat)
Unit: Vacancy nb/atoms nb  "
      end

      operation 155138 "GetQuenchingFinalConcentration"
	public explicit_return_type ""
	nparams 1
	  param in name "fileName" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "get the concentration (atomic fraction) of vacancies at the end of the quenching. (was at the end of quenching)"
      end

      operation 155266 "GetHardeningFinalConcentration"
	public explicit_return_type ""
	nparams 1
	  param in name "fileName" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "get the concentration (atomic fraction) of vacancies at the end of the hardening. "
      end

      operation 155394 "SolveConcentrationEvolutionEquation"
	private explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Compute and save the evolution of vacancies based on analytical solution of the differential equation "
      end

      operation 135288 "Vacancy"
	public explicit_return_type ""
	nparams 9
	  param in name "deltaHF" explicit_type "double"
	  param in name "deltaSF" explicit_type "double"
	  param in name "deltaHM" explicit_type "double"
	  param in name "fE" explicit_type "double"
	  param in name "Dlac0" explicit_type "double"
	  param in name "halfSinkD" explicit_type "double"
	  param in name "Tf" explicit_type "double"
	  param in name "EVacCu" explicit_type "double"
	  param in name "EVacMg" explicit_type "double"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${volatile}${throw} {
  ${body}}
"
	
	
	
	
      end

      operation 142712 "SetConcentrationBeforeQuenching"
	public explicit_return_type ""
	nparams 1
	  param in name "C" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 156920 "SetConcentrationAfterHardening"
	public explicit_return_type ""
	nparams 1
	  param in name "C" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Set the vacancy concentration  value after hardening  (maturation or tempering). Set XlacFinmat"
      end
    end

    sequencediagram 128120 "ReadData"
      sequencediagramsettings end
      overlapping_bars size A4
    end

    sequencediagram 134776 "ReadData_2024"
      sequencediagramsettings end
      overlapping_bars size A4
    end
  end

  classview 134658 "Thermal Loading"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    classdiagram 141442 "ThermalLoading"
      classdiagramsettings draw_all_relations no member_max_width 0 end
      size A4
    end
  end

  package_ref 128120 // Utils

  usecaseview 128120 "NuGroDis"
    
    usecasediagramsettings end
    
    sequencediagramsettings end
    
    collaborationdiagramsettings end
    
    classdiagramsettings member_max_width 0 end
    
    objectdiagramsettings end
    
    statediagramsettings
     end
    
    activitydiagramsettings
     end
    usecasediagram 128248 "pouet"
      usecasediagramsettings end
      size A4
    end

    class 134648 "user"
      visibility package stereotype "actor"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end
  end
end
